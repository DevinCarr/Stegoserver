/*!
 * Stegoserver 2014-07-11
 * Copyright (c) 2014 Devin Carr; License: MIT
 */
var stego_server={start:function(a,b,c){this.path=b,this.s_console=c;var d=this;http.createServer(function(a,c){d.s_console.log("info","request",a.url),"/"===a.url?(c.writeHead(200,{"Content-Type":"text/html"}),fs.readFile(b+"/index.html",function(a,b){a?d.returnFour(c,a):(c.write(b),c.end())})):-1!==a.url.indexOf("html")?(c.writeHead(200,{"Content-Type":"text/html"}),fs.readFile(b+a.url,function(a,b){a?d.returnFour(c,a):(c.write(b),c.end())})):-1!==a.url.indexOf("/",a.url.length-1)?(c.writeHead(200,{"Content-Type":"text/html"}),fs.readFile(b+a.url+"/index.html",function(a,b){a?d.returnFour(c,a):(c.write(b),c.end())})):(c.writeHead(200,{"Content-Type":"text/plain"}),fs.readFile(b+a.url,function(a,b){a?d.returnFour(c,a):(c.write(b),c.end())}))}).listen(a)},returnFour:function(a,b){this.s_console.log("error","request",b),fs.readFile(path+"/404.html",function(b,c){b?(a.write("Error: 404"),a.end()):(a.writeHead(404,{"Content-Type":"text/html"}),a.write(c),a.end())})},s_console:"",path:"./app/"},stego_console={log:function(a,b,c){var d=this.buildLog(a,b,c);this.fileName?this.writeLog(d):this.outLog(d)},start:function(a){this.fileName=a},writeLog:function(a){fs.appendFile(this.fileName,a+"\n",function(a){if(a)throw a})},outLog:function(a){console.log(a)},buildLog:function(a,b,c){a=a||"[INFO]";var d=new Date,e=d.toUTCString()+" ";return e+="["+a.toUpperCase()+"] ",""!==b&&(e+="["+b.toUpperCase()+"] "),e+=-1!==a.indexOf("error")?": "+c.message:": "+c},fileName:""},fs=require("fs"),http=require("http"),main=function(){var a=stego_server,b=stego_console;args=checkArgs(),port=args.port,log=args.log,path=args.path,b.start(log),a.start(port,path,b),b.log("info","initialization","Stegoserver starting on port:"+port)},checkArgs=function(){var a=process.argv.slice(2),b=8080,c="",d="./app";return a.forEach(function(e,f){if("-h"===e||"--help"===e)console.log("Usage: Stegoserver.js [options]\n\nA simple static Nodejs webserver\n\nOptions:\n  -p, --port [PORT]	The port number to bind the webservice to. Default: 8080\n  -l, --location [FILE_PATH]	The location of the app to serve files from (app folder). Default .\n  -d, --debug [FILE_NAME]	The name of the log file. Default: Console"),process.exit(0);else if("-p"===e)"number"==typeof+a[f+1]&&(b=a[f+1]);else if("-d"===e){var g=a[f+1];"string"==typeof g&&(c=-1===g.indexOf(".log")?g+".log":g)}else if("-l"===e){var h=a[f+1];stats=fs.statSync(h),stats.isDirectory()?d=-1===h.indexOf("/",h.length-1)?h:h.substring(0,h.length-1):(console.log("ERROR: path doesn't exist"),process.exit(0))}}),{port:b,log:c,path:d}};require.main===module&&main();